<!doctype html>
<html lang="th">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=1200, height=2000, initial-scale=1.0" />
  <title>ครัว – ลิสต์ (large)</title>

  <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@500;700;800&display=swap" rel="stylesheet">
  <style>
    :root{
      /* ปรับค่านี้เพื่อเร่ง/ลดขนาดทุกอย่างทั้งหน้า */
      --scale: 1.35;

      --font-ui: "Kanit", system-ui, -apple-system, "Noto Sans Thai", sans-serif;
      --on-dark:#fff;
      --ink:#E5E7EB;
      --brand-1:#F0A24E;
      --brand-2:#D88734;
      --border: rgba(255,255,255,.16);
      --radius: calc(18px * var(--scale));
      --header-h: calc(84px * var(--scale));
      --tabs-h:   calc(64px * var(--scale));
    }

    html,body{
      height:100%;
      margin:0;
      display:flex; align-items:center; justify-content:center;
      background:#0b0c0e;
      color:var(--on-dark);
      font-family: var(--font-ui);
      /* base font ใหญ่ขึ้นทั้งหน้า */
      font-size: calc(18px * var(--scale));
    }

    .stage{
      position:relative;
      width:1200px; height:2000px; overflow:hidden;
      border-radius: var(--radius);
      background:
        linear-gradient(180deg, rgba(0,0,0,.15), rgba(0,0,0,.65) 55%, rgba(0,0,0,.85)),
        url('/img/firstpage/BGHomepage.png') center/cover no-repeat;
      box-shadow:0 40px 100px rgba(0,0,0,.7), inset 0 0 0 1px rgba(255,255,255,.06);
    }

    .scroll{
      height:100%;
      overflow-y:auto;
      -webkit-overflow-scrolling: touch;
      overscroll-behavior: contain;
      scrollbar-width:none;
    }
    .scroll::-webkit-scrollbar{ display:none; }

    /* Header */
    header{
      position: sticky; top:0;
      height: var(--header-h);
      display:flex; align-items:center; justify-content:space-between;
      padding: 0 calc(24px * var(--scale));
      background: rgba(0,0,0,.58);
      backdrop-filter: blur(6px);
      border-bottom: 1px solid var(--border);
      z-index: 10;
    }
    .title{
      font-weight:800;
      font-size: calc(34px * var(--scale));
      letter-spacing:.2px;
      text-shadow:0 3px 10px rgba(0,0,0,.5);
    }
    .home{
      display:inline-flex; align-items:center; gap: calc(10px * var(--scale));
      padding: calc(12px * var(--scale)) calc(18px * var(--scale));
      border-radius: 999px; text-decoration:none; color:#fff;
      background: linear-gradient(180deg, var(--brand-1), var(--brand-2));
      border:1px solid var(--border);
      font-weight:800;
      font-size: calc(18px * var(--scale));
      box-shadow: inset 0 0 0 1px rgba(255,255,255,.08), 0 12px 28px rgba(0,0,0,.35);
    }

    /* Tabs */
    .tabs{
      position: sticky; top: var(--header-h);
      display:flex; gap: calc(14px * var(--scale));
      padding: calc(14px * var(--scale)) calc(22px * var(--scale));
      z-index: 9;
    }
    .tab{
      flex:1; height: var(--tabs-h);
      border-radius: 999px; border:1px solid var(--border);
      background: rgba(0,0,0,.48);
      color: var(--ink);
      display:grid; place-items:center;
      font-weight:800; letter-spacing:.3px;
      font-size: calc(22px * var(--scale));
      cursor:pointer;
      transition: transform .08s ease, filter .18s ease;
    }
    .tab:hover{ transform: translateY(-1px); }
    .tab.active{
      color:#fff;
      background:
        radial-gradient(180px 130px at 50% 0%, rgba(255,255,255,.18), rgba(255,255,255,0) 70%),
        linear-gradient(180deg, var(--brand-1), var(--brand-2));
      box-shadow: inset 0 0 0 1px rgba(255,255,255,.08), 0 14px 30px rgba(0,0,0,.35);
      border-color: transparent;
    }

    .summary{
      padding: 0 calc(26px * var(--scale));
      color:#E9ECEF;
      font-size: calc(20px * var(--scale));
    }

    /* Cards */
    .list{ padding: calc(16px * var(--scale)) calc(22px * var(--scale)) calc(30px * var(--scale)); display:flex; flex-direction:column; gap: calc(16px * var(--scale)); }
    .card{
      position:relative;
      display:grid; grid-template-columns: 1fr auto; align-items:center;
      gap: calc(20px * var(--scale));
      padding: calc(20px * var(--scale)) calc(22px * var(--scale));
      border-radius: calc(20px * var(--scale));
      background: linear-gradient(180deg, rgba(255,255,255,.12), rgba(255,255,255,.04));
      border:1px solid var(--border);
      box-shadow:0 22px 46px rgba(0,0,0,.38);
      transition: transform .08s ease, filter .18s ease;
    }
    .card:hover{ transform: translateY(-2px); filter:saturate(1.03); }

    .headline{ font-weight:800; font-size: calc(28px * var(--scale)); }
    .meta{ color:#dcdfe3; font-size: calc(18px * var(--scale)); }

    .chip{
      padding: calc(8px * var(--scale)) calc(16px * var(--scale));
      border-radius:999px;
      font-weight:800;
      font-size: calc(18px * var(--scale));
      background: rgba(0,0,0,.45);
      border:1px solid var(--border);
    }
    .chip--green{
      background: rgba(34,197,94,.20); color:#d1fae5; border-color: rgba(34,197,94,.40);
    }

    a.link{ color:inherit; text-decoration:none; }
  </style>
</head>
<body>
  <main class="stage">
    <section class="scroll">
      <header>
        <div class="title">พ่อครัว_ออเดอร์</div>
        <!-- <a class="home" href="/">หน้าหลัก</a> -->
      </header>

      <div class="tabs">
        <button class="tab active" id="tab-pending">กำลังปรุง</button>
        <button class="tab" id="tab-done">เสร็จสิ้น</button>
      </div>

      <div id="summary" class="summary">กำลังโหลด…</div>
      <div id="list" class="list"></div>
    </section>
  </main>

  <script>
    let currentStatus = 'PENDING';
    const summary = document.getElementById('summary');
    const listEl  = document.getElementById('list');

    document.getElementById('tab-pending').onclick = () => switchTab('PENDING');
    document.getElementById('tab-done').onclick    = () => switchTab('DONE');

    function switchTab(st){
      currentStatus = st;
      document.getElementById('tab-pending').classList.toggle('active', st==='PENDING');
      document.getElementById('tab-done').classList.toggle('active', st==='DONE');
      load();
    }

    async function load(){
      const res  = await fetch('/api/kitchen?status=' + currentStatus);
      const rows = await res.json();

      const map = {};
      rows.forEach(r => (map[r.order_id] ||= []).push(r));
      const entries = Object.entries(map);

      summary.textContent = entries.length ? `ออเดอร์ทั้งหมด ${entries.length}` : 'ไม่มีออเดอร์';

      listEl.innerHTML = entries.map(([oid, items])=>{
        const type  = items[0].order_type || 'ไม่ระบุ';
        const count = items.length;
        return `
          <a class="link" href="/kitchen/${oid}">
            <div class="card">
              <div>
                <div class="headline">ออเดอร์ #${oid}</div>
                <div class="meta">${type} • รายการ ${count} รายการ</div>
              </div>
              <div class="chip ${currentStatus==='DONE' ? 'chip--green':''}">
                ${currentStatus==='DONE' ? 'เสร็จสิ้น' : 'กำลังปรุง'}
              </div>
            </div>
          </a>
        `;
      }).join('');
    }

    load();
    setInterval(load, 5000);
  </script>
</body>
</html>
